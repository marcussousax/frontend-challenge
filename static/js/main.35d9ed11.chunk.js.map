{"version":3,"sources":["styles.ts","components/Modal.tsx","components/Header.tsx","components/Search.tsx","useDebounce.ts","components/List/Filter.tsx","useTodoStore.ts","components/List/styled.ts","components/Button.tsx","components/List/Item.tsx","components/List/index.tsx","components/ProgressBar.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","customMediaQuery","width","max","media","custom","large","small","xsmall","maxXsmall","Wrapper","styled","div","Content","CONTENT_PADDING","Modal","children","Header","date","Date","className","getDate","getMonth","getFullYear","toLocaleString","weekday","header","Input","input","SearchInput","searchState","setSearchState","React","useState","search","setSearch","delayedSearch","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","placeholder","onChange","e","target","type","STATUS","label","Button","button","selected","css","Spacer","span","Filter","props","map","item","index","filter","onClick","setFilter","handleClick","Search","persist","configurePersist","storage","localStorage","rootKey","useStore","create","key","denylist","set","addTodo","todoItem","state","todos","title","_id","uid","length","isCompleted","createdAt","getTime","removeTodo","todo","toggleDone","Li","li","isEditing","theme","add","remove","complete","StyledButton","disabled","variant","ListItemTitle","ListItem","setIsEditing","id","size","color","Ul","ul","BlankStateMessage","p","AddItem","todoValue","setTodoValue","onSubmit","AddItemWrapper","AddItemInput","List","toLowerCase","style","cursor","overflow","Progress","progress","ProgressBar","completedTodos","App","filteredTodos","x","includes","AppContainer","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35d9ed11.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n\n  /* ===== Scrollbar CSS ===== */\n  /* Firefox */\n  * {\n    scrollbar-width: auto;\n    scrollbar-color: #8c8c8c #ffffff;\n  }\n\n  /* Chrome, Edge, and Safari */\n  *::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  *::-webkit-scrollbar-track {\n    background: #ffffff;\n  }\n\n  *::-webkit-scrollbar-thumb {\n    background-color: #8c8c8c;\n    border-radius: 10px;\n    border: 3px solid #ffffff;\n  }\n  \n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Segoe UI', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`\n\nconst customMediaQuery = (width: number, max?: boolean) => {\n  if (max) {\n    return `@media (max-width: ${width}px)`\n  }\n  return `@media (min-width: ${width}px)`\n}\nexport const media = {\n  custom: customMediaQuery,\n  large: customMediaQuery(900),\n  small: customMediaQuery(768),\n  xsmall: customMediaQuery(500),\n  maxXsmall: customMediaQuery(600, true),\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { media } from '../styles'\n\nconst Modal: React.FC = ({ children }) => {\n  return (\n    <Wrapper>\n      <Content>{children}</Content>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  &:before {\n    content: ' ';\n    background-color: #555;\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: -1;\n  }\n\n  padding: 16px;\n  min-height: calc(100vh - 32px);\n\n  ${media.xsmall} {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n  }\n`\n\nconst CONTENT_PADDING = 60\nconst Content = styled.div`\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 5vw;\n  max-width: calc(800px - ${CONTENT_PADDING * 2}px);\n  display: flex;\n  flex-direction: column;\n  ${media.xsmall} {\n    width: 65vw;\n    padding: ${CONTENT_PADDING}px;\n    height: 50vh;\n  }\n`\n\nexport default Modal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { media } from '../styles'\n\nfunction Header() {\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ]\n\n  const date = new Date()\n\n  return (\n    <Header.Wrapper>\n      <h1 className=\"headline-1\">\n        <p className=\"date\">\n          <span className=\"day\">{date.getDate()}</span>\n          <span className=\"month\">{months[date.getMonth()]}</span>\n          <span className=\"year\">{date.getFullYear()}</span>\n        </p>\n        <p className=\"weekday\">\n          {date.toLocaleString('default', { weekday: 'long' })}\n        </p>\n      </h1>\n    </Header.Wrapper>\n  )\n}\n\nHeader.Wrapper = styled.header`\n  .headline-1 {\n    color: #848484;\n    flex: 1;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    flex-wrap: wrap;\n    margin-bottom: 0;\n\n    ${media.xsmall} {\n      margin: 0;\n    }\n\n    .date {\n      display: grid;\n      align-items: center;\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr 1fr;\n      gap: 0 5px;\n      grid-template-areas:\n        'day month'\n        'day year';\n      margin: 0;\n      line-height: 24px;\n    }\n  }\n\n  .day {\n    grid-area: day;\n    font-weight: 500;\n    font-size: 60px;\n  }\n\n  .month {\n    grid-area: month;\n    font-weight: 400;\n    font-size: 24px;\n    text-align: left;\n  }\n\n  .year {\n    grid-area: year;\n    font-weight: 300;\n    font-size: 24px;\n    text-align: left;\n  }\n\n  .weekday {\n    font-size: 24px;\n    font-weight: 400;\n    margin: 0;\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\nimport { media } from '../styles'\nimport { useDebounce } from '../useDebounce'\n\nexport type SearchInputProps = {\n  searchState: string\n  setSearchState: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({\n  searchState,\n  setSearchState,\n}) => {\n  const [search, setSearch] = React.useState(searchState)\n  const delayedSearch = useDebounce(search, 500)\n\n  // @ts-ignore\n  React.useEffect(() => {\n    if (searchState !== null) {\n      setSearchState(delayedSearch)\n    }\n  }, [delayedSearch, searchState, setSearchState])\n\n  return (\n    <Input\n      placeholder=\"Search items\"\n      value={search}\n      onChange={(e) => setSearch(e.target.value)}\n      type=\"search\"\n    />\n  )\n}\n\nconst Input = styled.input`\n  background: #ffffff padding-box;\n  border: 1px solid #dbdbdb;\n  border-radius: 4px;\n  line-height: calc(40px - 18px);\n  padding: 8px 16px;\n\n  ${media.maxXsmall} {\n    order: -2;\n    width: 100%;\n  }\n`\n\nexport default SearchInput\n","import { useState, useEffect } from 'react'\n\nexport const useDebounce = (value: string, delay: number | undefined) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { FaCheck } from 'react-icons/fa'\nimport SearchInput from '../Search'\nimport { media } from '../../styles'\nimport { SearchInputProps } from '../Search'\nconst STATUS = [{ label: 'Done' }, { label: 'Pending' }]\n\nexport type FilterProps = {\n  filter: string\n  setFilter: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst Filter: React.FC<FilterProps & SearchInputProps> = (props) => {\n  const handleClick = (item: { label: string }) => {\n    if (props.filter === item.label) {\n      props.setFilter('')\n    } else {\n      props.setFilter(item.label)\n    }\n  }\n  return (\n    <Wrapper>\n      {STATUS.map((item, index) => (\n        <Button\n          key={index}\n          selected={props.filter === item.label}\n          onClick={() => handleClick(item)}\n        >\n          {props.filter === item.label && <FaCheck />} {item.label}\n        </Button>\n      ))}\n      <Spacer />\n      <SearchInput\n        searchState={props.searchState}\n        setSearchState={props.setSearchState}\n      />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 8px;\n  flex-flow: wrap;\n  margin: 16px 0;\n\n  ${media.maxXsmall} {\n    flex-direction: row-reverse;\n  }\n`\nconst Button = styled.button<{ selected: any }>`\n  border-radius: 16px;\n  font-size: 14px;\n  line-height: 1;\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  ${({ selected }) =>\n    selected\n      ? css`\n          color: #4da6b3;\n          border: 1px solid #4da6b3;\n          background-color: #f7f7f8;\n        `\n      : css`\n          color: #848484;\n          border: 1px solid #dbdbdb;\n          background: transparent;\n        `}\n`\n\nconst Spacer = styled.span`\n  flex: 1;\n`\n\nexport default Filter\n","import create from 'zustand'\nimport { configurePersist } from 'zustand-persist'\nimport { uid } from 'react-uid'\nimport { ITodo } from './components/List'\n\nexport interface ITodoStore {\n  addTodo: (todoItem: string) => void\n  removeTodo: (todoItem: string) => void\n  toggleDone: (todoItem: string) => void\n  todos: ITodo[]\n}\n\nconst { persist } = configurePersist({\n  storage: localStorage,\n  rootKey: 'sizebay-frontend-challenge',\n})\n\nexport const useStore = create(\n  persist(\n    {\n      key: 'TodoList',\n      denylist: [''],\n    },\n    (set): ITodoStore => ({\n      addTodo: (todoItem: string) =>\n        set((state: ITodoStore) => ({\n          todos: [\n            ...state.todos,\n            {\n              title: todoItem,\n              _id: uid(`${todoItem}-${state.todos.length}`),\n              isCompleted: false,\n              createdAt: new Date().getTime(),\n            },\n          ],\n        })),\n      removeTodo: (todoItem: string) =>\n        set((state: ITodoStore) => ({\n          // @ts-ignore\n          todos: [...state.todos.filter((todo) => todo._id !== todoItem._id)],\n        })),\n      toggleDone: (todoItem: string) => {\n        set((state: ITodoStore) => ({\n          todos: state.todos.map((todo) =>\n            // @ts-ignore\n            todo._id === todoItem._id ? { ...todo, isCompleted: true } : todo,\n          ),\n        }))\n      },\n      todos: [],\n    }),\n  ),\n)\n","import styled, { css } from 'styled-components'\n\nexport const Li = styled.li<{ isEditing?: boolean; isCompleted?: boolean }>`\n  background: ${({ isEditing }) => (isEditing ? '#fff' : '#f4f4f4')};\n  font-size: 14px;\n  color: #848484;\n  border-radius: 4px;\n  line-height: calc(40px - 18px);\n  display: flex;\n  overflow: hidden;\n  ${({ isCompleted }) =>\n    isCompleted &&\n    css`\n      text-decoration: line-through;\n    `}\n`\n\nexport const Spacer = styled.span`\n  flex: 1;\n`\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface IButton {\n  variant: 'add' | 'remove' | 'complete' | undefined\n  onClick?: () => void\n  disabled?: boolean\n}\n\nconst Button: React.FC<IButton> = (props) => {\n  return (\n    <StyledButton\n      onClick={props.onClick}\n      disabled={props.disabled}\n      variant={props.variant}\n    >\n      {props.children}\n    </StyledButton>\n  )\n}\n\nconst theme = {\n  add: '#4DA6B3',\n  remove: '#E34F4F',\n  complete: '#5DE290',\n}\n\nconst StyledButton = styled.button<Partial<IButton>>`\n  border: none;\n  width: 44px;\n  background: #4da6b3 0 0 no-repeat padding-box;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${({ variant }) => {\n    return variant\n      ? css`\n          background: ${theme[variant]};\n        `\n      : '#ccc'\n  }};\n\n  > svg {\n    color: #fff;\n  }\n`\n\nexport default Button\n","import React from 'react'\nimport { FaMinusCircle, FaCheckCircle } from 'react-icons/fa'\nimport ReactTooltip from 'react-tooltip'\nimport * as S from './styled'\nimport { ITodo } from './index'\nimport { useStore } from '../../useTodoStore'\nimport Button from '../Button'\nimport styled from 'styled-components'\n\nconst ListItem: React.FC<{\n  item: ITodo\n}> = ({ item }) => {\n  const [isEditing, setIsEditing] = React.useState(false)\n\n  const { removeTodo, toggleDone } = useStore((state) => state)\n\n  return (\n    <>\n      <S.Li\n        onClick={() => setIsEditing(!isEditing)}\n        isCompleted={item.isCompleted}\n        isEditing={isEditing}\n      >\n        <ListItemTitle data-tip data-for=\"title\">\n          {!isEditing && (\n            <ReactTooltip id=\"title\" type=\"dark\">\n              Edit task\n            </ReactTooltip>\n          )}\n\n          {item.title}\n        </ListItemTitle>\n\n        {isEditing && (\n          <>\n            <Button variant=\"remove\" onClick={() => removeTodo(item)}>\n              <FaMinusCircle size={18} color={'#fff'} />\n            </Button>\n            <Button\n              variant=\"complete\"\n              disabled={item.isCompleted}\n              onClick={() => toggleDone(item)}\n            >\n              <FaCheckCircle size={18} color={'#fff'} />\n            </Button>\n          </>\n        )}\n      </S.Li>\n    </>\n  )\n}\n\nconst ListItemTitle = styled.span`\n  border: 1px solid #dbdbdb;\n  padding: 8px 16px;\n  flex: 1;\n  cursor: pointer;\n`\n\nexport default ListItem\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FaPlusCircle } from 'react-icons/fa'\nimport Filter from './Filter'\nimport { useStore } from '../../useTodoStore'\nimport ListItem from './Item'\nimport Button from '../Button'\n\nexport interface ITodo {\n  _id: string\n  title: string\n  isCompleted: boolean\n  createAt: string\n}\n\nconst List = ({\n  todos,\n  filter,\n  setFilter,\n  searchState,\n  setSearchState,\n}: {\n  todos: ITodo[]\n  searchState: string\n  setSearchState: React.Dispatch<React.SetStateAction<string>>\n  filter: string\n  setFilter: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  return (\n    <>\n      <Filter\n        filter={filter}\n        setFilter={setFilter}\n        searchState={searchState}\n        setSearchState={setSearchState}\n      />\n\n      {filter && !todos.length && (\n        <BlankStateMessage>\n          There are no items marked as {filter.toLowerCase()}.&nbsp;\n          <u style={{ cursor: 'pointer' }} onClick={() => setFilter('')}>\n            Clear the filter here\n          </u>\n          &nbsp;to see all items.\n        </BlankStateMessage>\n      )}\n\n      {searchState && !todos.length ? (\n        <BlankStateMessage>\n          Your search found no results.&nbsp;\n          <u style={{ cursor: 'pointer' }} onClick={() => setSearchState('')}>\n            Clean the search here\n          </u>\n          &nbsp;to see all items.\n        </BlankStateMessage>\n      ) : (\n        <>\n          {!searchState && !filter && <AddItem />}\n          <div style={{ overflow: 'auto' }}>\n            <Ul>\n              {todos.map((item: ITodo) => (\n                <ListItem key={item._id} item={item} />\n              ))}\n            </Ul>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\nconst Ul = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 0;\n`\n\nconst BlankStateMessage = styled.p`\n  font-size: 14px;\n  color: #848484;\n  margin: 8px;\n`\n\nconst AddItem = () => {\n  const [todoValue, setTodoValue] = React.useState('')\n\n  // @ts-ignore\n  const { addTodo } = useStore((state) => state)\n\n  const handleSubmit = () => {\n    addTodo(todoValue)\n    setTodoValue('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <AddItemWrapper>\n        <AddItemInput\n          value={todoValue}\n          onChange={(e) => setTodoValue(e.target.value)}\n          type={'text'}\n          placeholder={'Add new item...'}\n        />\n        <Button disabled={!todoValue} variant={'add'}>\n          <FaPlusCircle size={18} color={'#fff'} />\n        </Button>\n      </AddItemWrapper>\n    </form>\n  )\n}\nconst AddItemWrapper = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n`\nconst AddItemInput = styled.input`\n  flex: 1;\n  padding: 8px 16px;\n  background: #f4f4f4;\n  border: 1px solid #dbdbdb;\n  border-radius: 4px 0 0 4px;\n\n  line-height: calc(40px - 18px);\n\n  & + button {\n    opacity: 0.5;\n    border-radius: 0 4px 4px 0;\n  }\n\n  &:focus {\n    background: #fff;\n    outline: none;\n\n    & + button {\n      opacity: 1;\n    }\n  }\n`\n\nexport default List\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStore } from '../useTodoStore'\nimport { ITodo } from './List'\n\nconst ProgressBar = () => {\n  const todos = useStore((state) => state.todos)\n  const completedTodos = todos.filter((todo: ITodo) => todo.isCompleted)\n\n  return (\n    <>\n      <Progress value={completedTodos.length} max={todos.length} />\n    </>\n  )\n}\n\nconst Progress = styled.progress`\n  width: 100%;\n  height: 24px;\n  color: #5de290;\n  appearance: none;\n  margin: 24px 0 0;\n  flex-shrink: 0;\n  &::-webkit-progress-bar {\n    background-color: #e4e4e4;\n    border-radius: 4px;\n  }\n\n  &::-webkit-progress-value {\n    background: #5de290;\n    border-radius: 4px 0 0 4px;\n  }\n\n  &::-moz-progress-bar {\n    background: #5de290;\n    border-radius: 4px;\n  }\n`\n\nexport default ProgressBar\n","import React from 'react'\n\nimport Modal from './components/Modal'\nimport Header from './components/Header'\nimport List, { ITodo } from './components/List'\nimport ProgressBar from './components/ProgressBar'\nimport { useStore } from './useTodoStore'\n\nfunction App() {\n  const todos = useStore((state) => state.todos)\n  const [filter, setFilter] = React.useState('')\n  const [search, setSearch] = React.useState('')\n\n  let filteredTodos: ITodo[]\n  switch (filter) {\n    case 'Done':\n      filteredTodos = todos.filter((todo: Partial<ITodo>) => todo.isCompleted)\n      break\n    case 'Pending':\n      filteredTodos = todos.filter((todo: Partial<ITodo>) => !todo.isCompleted)\n      break\n    default:\n      filteredTodos = todos\n  }\n\n  if (search) {\n    filteredTodos = filteredTodos.filter((x) => x.title.includes(search))\n  }\n\n  return (\n    <Modal>\n      <Header />\n      <ProgressBar />\n      <List\n        todos={filteredTodos}\n        filter={filter}\n        setFilter={setFilter}\n        searchState={search}\n        setSearchState={setSearch}\n      />\n    </Modal>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { GlobalStyles } from './styles'\n\nconst AppContainer = () => {\n  return (\n    <React.StrictMode>\n      <GlobalStyles />\n      <App />\n    </React.StrictMode>\n  )\n}\n\nReactDOM.render(<AppContainer />, document.getElementById('szb-app-root'))\n"],"sourceRoot":""}